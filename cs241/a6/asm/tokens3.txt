INT int
WAIN wain
LPAREN (
INT int
ID a
COMMA ,
INT int
ID b
RPAREN )
LBRACE {
INT int
ID x
BECOMES =
NUM 0
SEMI ;
INT int
ID y
BECOMES =
NUM 0
SEMI ;
INT int
ID c
BECOMES =
NUM 0
SEMI ;
INT int
ID divisor
BECOMES =
NUM 0
NUM 1234
ID bbbb4567
SEMI ;
INT int
ID done
BECOMES =
NUM 0
SEMI ;
IF if
LPAREN (
ID a
LT <
ID b
RPAREN )
LBRACE {
ID x
BECOMES =
ID a
SEMI ;
ID y
BECOMES =
ID b
SEMI ;
RBRACE }
ELSE else
LBRACE {
ID x
BECOMES =
ID b
SEMI ;
ID y
BECOMES =
ID c
SEMI ;
RBRACE }
IF if
LPAREN (
ID x
EQ ==
NUM 1
RPAREN )
LBRACE {
ID x
BECOMES =
ID x
PLUS +
NUM 1
SEMI ;
RBRACE }
ELSE else
LBRACE {
RBRACE }
IF if
LPAREN (
ID x
EQ ==
NUM 2
RPAREN )
LBRACE {
IF if
LPAREN (
ID y
GE >=
NUM 2
RPAREN )
LBRACE {
ID c
BECOMES =
NUM 1
SEMI ;
RBRACE }
ELSE else
LBRACE {
RBRACE }
ID x
BECOMES =
ID x
PLUS +
NUM 1
SEMI ;
RBRACE }
ELSE else
LBRACE {
RBRACE }
IF if
LPAREN (
ID x
PCT %
NUM 2
EQ ==
NUM 0
RPAREN )
LBRACE {
ID x
BECOMES =
ID x
PLUS +
NUM 1
SEMI ;
RBRACE }
ELSE else
LBRACE {
RBRACE }
WHILE while
LPAREN (
ID x
LE <=
ID y
RPAREN )
LBRACE {
ID divisor
BECOMES =
NUM 3
SEMI ;
ID done
BECOMES =
NUM 0
SEMI ;
WHILE while
LPAREN (
ID done
EQ ==
NUM 0
RPAREN )
LBRACE {
ID divisor
BECOMES =
ID divisor
PLUS +
NUM 2
SEMI ;
RBRACE }
ID x
BECOMES =
ID x
PLUS +
NUM 2
SEMI ;
RBRACE }
RETURN return
ID c
SEMI ;
RBRACE }
